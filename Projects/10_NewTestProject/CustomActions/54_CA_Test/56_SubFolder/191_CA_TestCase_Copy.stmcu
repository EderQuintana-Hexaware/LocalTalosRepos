[
  {
    "TempId": 191,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class CA_TestCase_Copy extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n       //-----------------Header-----------------\r\n            CustomStep BlockTest = new CustomStep(actionResult);\r\n            BlockTest.comments = \"BlockTest\";\r\n            BlockTest.isHeader = true;\r\n            //BlockTest.Screenshot(driver, \"<FILE_NAME>\");\r\n       //-----------------Header-----------------\r\n\r\n        \r\n       //-----------------Header-----------------\r\n            CustomStep  = new CustomStep(actionResult);\r\n            .comments = \"2\";\r\n            .isHeader = true;\r\n            //.Screenshot(driver, \"<FILE_NAME>\");\r\n       //-----------------Header-----------------\r\n\r\n       //------------------------------------Block Start Here------------------------------------\r\n            CustomStep Step1 = new CustomStep(actionResult);\r\n            try \r\n            {\r\n                //Insert the step Logic\r\n                //Step1.Screenshot(driver, \"<FILE_NAME>\");\r\n                Step1.status = true;\r\n                Step1.comments = \"\";\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                Step1.status = false;\r\n                Step1.comments = ex.getMessage();\r\n            }\r\n\r\n            CustomStep Step2 = new CustomStep(actionResult);\r\n            try \r\n            {\r\n                //Insert the step Logic\r\n                //Step2.Screenshot(driver, \"<FILE_NAME>\");\r\n                Step2.status = true;\r\n                Step2.comments = \"\";\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                Step2.status = false;\r\n                Step2.comments = ex.getMessage();\r\n            }\r\n       //------------------------------------Block Finish Here------------------------------------\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>\n",
    "Type": 1,
    "OriginalProjectId": 0,
    "Name": "CA_TestCase_Copy",
    "Created": null,
    "Modified": null
  }
]